<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!-- 1. namesapce 설정을 알맞게 지정하세요. -->
<mapper namespace="com.management.product.model.dao.ProductDAO">

    <!-- 2. ProductDTO type의 resultMap을 설정하세요. -->
    <resultMap id="productResultMap" type="ProductDTO">
        <!-- id : pk에 해당하는 컬럼을 작성 -->
        <id property="productCode" column="menu_code"/>
        <!-- result : pk 외의 일반 컬럼을 작성 -->
        <result property="productName" column="product_name"/>
        <result property="originCost" column="origin_cost"/>
        <result property="releaseDate" column="release_date"/>
        <result property="discountRate" column="discount_rate"/>
        <result property="salesQuantity" column="sales_quantity"/>
        <result property="stockQuantity" column="stock_quantity"/>
        <result property="categoryCode" column="category_code"/>
        <result property="productionStatus" column="production_status"/>
    </resultMap>

    <!-- 3. 전체 목록을 조회하는 쿼리를 작성하세요.
            (쿼리id) selectAllProductList -->
    <select id="selectAllProductList" resultType="ProductDTO">
        SELECT
              product_code
            , product_name
            , origin_cost
            , release_date
            , discount_rate
            , sales_quantity
            , stock_quantity
            , category_code
            , production_status
        FROM
            product_info
        ORDER BY product_code
    </select>

    <!-- 4. 조건에 따른 목록을 조회하는 쿼리를 작성하세요.
            (쿼리id) selectProductByCondition
            (참고 1) 제품명 조회인 경우, 검색어를 '포함'한 모든 제품을 조회합니다.
                     (예시) '솔' 검색 -> 솔방울, 칫솔 등 '솔' 포함 제품 모두 조회
            (참고 2) 판매점 유형별 조회의 경우,
                     '백화점'이면 할인율이 0%인 제품, '아울렛'이면 할인율이 1% 이상인 제품을 조회합니다.
            (참고 3) 이달의 신상품 조희의 경우, 출시일이 이번 달인 제품(예를 들어, 현재 기준이면 2023년 5월 출시 제품)울 조회합니다. -->
    <select id="selectProductByCondition" resultType="ProductDTO">
        SELECT
            product_code
             , product_name
             , origin_cost
             , release_date
             , discount_rate
             , sales_quantity
             , stock_quantity
             , category_code
             , production_status
        FROM
            product_info
        <where>
            <!-- 제품명 검색 조건 (option == '1') -->
            <if test="option == 'productName' and value != null and value != ''">
                product_name LIKE CONCAT('%', #{value}, '%')
            </if>

            <!-- 판매점 유형 검색 조건 (option == '2') -->
            <if test="option == 'salesStore'">
                <choose>
                    <when test="value == '백화점'">
                        discount_rate = 0
                    </when>
                    <when test="value == '아울렛'">
                        discount_rate >= 1
                    </when>
                </choose>
            </if>

            <!-- 이달의 신상품 검색 조건 (option == '3') -->
            <if test="option == 'newProduct'">
                AND DATE_FORMAT(STR_TO_DATE(release_date, '%Y-%m-%d'), '%Y-%m') = DATE_FORMAT(CURRENT_DATE, '%Y-%m')
            </if>
        </where>
    </select>

    <!-- 5. 제품 정보를 등록하는 쿼리를 작성하세요.
            (쿼리id) insertProduct -->

    <!-- 6. 사용자가 수정을 원하는 데이터만 수정하도록 Dynamic Query를 활용한 쿼리를 작성하세요.
            (쿼리id) updateProduct -->

    <!-- 7. 제품 정보를 삭제하는 쿼리를 작성하세요.
            (쿼리id) deleteProduct -->

</mapper>
